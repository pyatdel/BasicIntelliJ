포워딩 = mustache

뷰가 바뀌었을 떄는 망치를 이용해서 빌드하면 빠르다



폼 데이터(form data)란 HTML 요소인 <form> 태그에 실려 전송되는 데이터를 말함. 
인터넷 게시판에 글을 쓸 때 내용을 입력하고 [전송] 버튼을 누르면 게시글이 올라감. 
<form> 태그는 이렇게 웹 브라우저에서 서버로 데이터를 전송 시 사용함.
<form> 태그는 택배에 비유할 수 있음. 택배를 보낼 시 
송장에 수령자와 배송 형태(익일 배송, 새벽 배송 등)를 적음. 
<form> 태그도 데이터를 전송 시 어디로(where), 어떻게(how) 보낼지 등을 적어서 보냄.
<form> 태그에 실어 보낸 데이터는 서버의 컨트롤러가 객체에 담아 받음. 
이 객체를 DTO(Data Transfer Object)라고 함. 
DTO로 받은 데이터는 최종적으로 데이터베이스(DB, Database)에 저장됨.


DB는 자바 언어를 이해하지 못함. 스프링 부트는 자바 언어를 사용하지만 
DB는 SQL(Structed Query Language)라는 언어를 사용함.
DB에 자바로 명령을 내리려면 바로 JPA를 사용하면 됨. 
JPA(Java Persistence API)란 자바 언어로 DB에 명령을 내리는 도구로, 
데이터를 객체 지향적으로 관리할 수 있게 해 줌. JPA도 프로젝트 생성 시 추가해줬음.

[스프링 삼각형]
    psa  pojo   ioc/di    aop
카톡 프사 좀 퍼줘 아이씨/디게 아파

 psa
 pojo   :본연의 자바 사용
 ioc/di :기존에는 new를 개발자가.. 이젠 new를 spring에서 / 의존성 주입
 aop    :개발자는 개발만!


1) 폼 데이터를 받는 객체 DTO. DTO의 클래스 타입은 ArticleForm
2) DTO가 엔티티로 변환됨. 엔티티의 클래스 타입은 Article
3) 리파지터리가 엔티티를 DB에 저장해 saved라는 엔티티 변수에 반환.
saved 변수에 저장된 결과를 보면 title과 content는 똑같고 id는 자동으로 설정된 1을 출력함.
saved 변수는 엔티티 타입이고, 엔티티의 클래스 타입은 Article



!!자바(*.java) 코드가 바뀔 때는 서버를 재시작해야 하지만, 
머스테치(*.mustache) 코드가 바뀔 때는 망치 아이콘만 눌러 빌드해도 됨.

